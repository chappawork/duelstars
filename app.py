from flask import Flask, render_template, request, redirect, url_for, session
import random
import uuid

app = Flask(__name__)
app.secret_key = "your_secret_key"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
games = {}

CHOICES = {
    "rock": "ü™® –ö–∞–º–µ–Ω—å",
    "paper": "üìÑ –ë—É–º–∞–≥–∞",
    "scissors": "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã"
}

def determine_winner(choice1, choice2):
    if choice1 == choice2:
        return 0
    wins = {
        "rock": "scissors",
        "scissors": "paper",
        "paper": "rock"
    }
    return 1 if wins[choice1] == choice2 else 2

@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        player_id = request.form.get("player_id")
        if not player_id:
            return "‚ùå –ù–µ –ø–µ—Ä–µ–¥–∞–Ω player_id", 400

        # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∏–≥—Ä—É –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π
        for game_id, game in games.items():
            if len(game["players"]) < 2:
                game["players"].append(player_id)
                session["game_id"] = game_id
                session["player_id"] = player_id
                return redirect(url_for("game"))

        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
        game_id = str(uuid.uuid4())
        games[game_id] = {
            "players": [player_id],
            "moves": {}
        }
        session["game_id"] = game_id
        session["player_id"] = player_id
        return redirect(url_for("game"))

    return render_template("index.html")

@app.route("/game", methods=["GET", "POST"])
def game():
    game_id = session.get("game_id")
    player_id = session.get("player_id")

    if not game_id or not player_id or game_id not in games:
        return redirect(url_for("index"))

    game = games[game_id]

    if request.method == "POST":
        move = request.form.get("move")
        if move not in CHOICES:
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ö–æ–¥", 400
        game["moves"][player_id] = move

        # –ï—Å–ª–∏ –æ–±–∞ –∏–≥—Ä–æ–∫–∞ —Å—Ö–æ–¥–∏–ª–∏ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if len(game["moves"]) == 2:
            return redirect(url_for("result"))

    opponent_connected = len(game["players"]) == 2
    already_moved = player_id in game["moves"]
    return render_template("game.html", choices=CHOICES, opponent_connected=opponent_connected, already_moved=already_moved)

@app.route("/result")
def result():
    game_id = session.get("game_id")
    player_id = session.get("player_id")

    if not game_id or not player_id or game_id not in games:
        return redirect(url_for("index"))

    game = games[game_id]
    if len(game["players"]) < 2 or len(game["moves"]) < 2:
        return redirect(url_for("game"))

    p1, p2 = game["players"]
    move1 = game["moves"][p1]
    move2 = game["moves"][p2]
    winner = determine_winner(move1, move2)

    if winner == 0:
        result_text = "ü§ù –ù–∏—á—å—è!"
    elif (winner == 1 and player_id == p1) or (winner == 2 and player_id == p2):
        result_text = "üèÜ –í—ã –ø–æ–±–µ–¥–∏–ª–∏!"
    else:
        result_text = "üíÄ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏."

    # –û—á–∏—Å—Ç–∏—Ç—å –∏–≥—Ä—É
    del games[game_id]

    return render_template("result.html", result=result_text, move1=CHOICES[move1], move2=CHOICES[move2])

if __name__ == "__main__":
    app.run(debug=True)

